{"version":3,"sources":["components/Statistics/Statistics.js","components/Section/Section.js","components/Feedback/FeedbackOptions.js","components/Notification/Notification.js","App.js","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","protoType","PropTypes","number","isRequired","positiveliercentage","Section","title","children","FeedbackOptions","options","onLeaveFeedback","map","option","type","onClick","Notification","message","App","state","handleFeedback","btn","setState","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kPAEMA,EAAa,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,mCACE,+BACE,wCAAWJ,KACX,2CAAcC,KACd,sCAASC,KACT,yCAAYC,KACZ,qDAAwBC,EAAxB,aAMRL,EAAWM,UAAY,CACrBL,KAAMM,IAAUC,OAAOC,WACvBP,QAASK,IAAUC,OAAOC,WAC1BN,IAAKI,IAAUC,OAAOC,WACtBL,MAAOG,IAAUC,OAAOC,WACxBC,oBAAqBH,IAAUC,OAAOC,YAGzBT,QCRAW,EAdC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,MC2BQC,EAZS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OAAOD,EAAQE,KAAI,SAAAC,GAAM,OACvB,wBAAQC,KAAK,SAAsBC,QAAS,kBAAMJ,EAAgBE,IAAlE,SACGA,GADwBA,OCbhBG,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,4BAAIA,KCuDEC,E,4MAnDbC,MAAQ,CACNvB,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPsB,eAAiB,SAAAC,GACf,EAAKC,SAAL,eAAiBD,EAAM,EAAKF,MAAME,GAAO,K,EAG3CE,mBAAqB,WAAO,IAAD,EACM,EAAKJ,MACpC,OAFyB,EACjBvB,KADiB,EACXC,QADW,EACFC,K,EAIzB0B,gCAAkC,WAChC,IAAMzB,EAAQ,EAAKwB,qBACX3B,EAAS,EAAKuB,MAAdvB,KACR,OAAO6B,KAAKC,MAAO9B,EAAOG,EAAS,M,uDAG3B,IAAD,EACwB4B,KAAKR,MAA5BvB,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQ4B,KAAKJ,qBACbvB,EAAqB2B,KAAKH,kCAChC,OACE,qCACE,cAAC,EAAD,CAASjB,MAAM,wBAAf,SACE,cAAC,EAAD,CACEG,QAAS,CAAC,OAAQ,UAAW,OAC7BC,gBAAiBgB,KAAKP,mBAG1B,cAAC,EAAD,CAASb,MAAM,aAAf,SACGR,EAAQ,EACP,cAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IAGtB,cAAC,EAAD,CAAciB,QAAQ,+B,GA5ChBW,aCFlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.99550b1c.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\r\n  return (\r\n    <>\r\n      <ul>\r\n        <li>Good: {good}</li>\r\n        <li>Neutral: {neutral}</li>\r\n        <li>Bad:{bad}</li>\r\n        <li>Total: {total}</li>\r\n        <li>positive feedback: {positivePercentage}%</li>\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\n\r\nStatistics.protoType = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positiveliercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\n\r\n// const FeedbackBtn = ({ feedback, onLeaveFeedback }) => {\r\n//   return (\r\n//     <button type=\"button\" data-feedback={feedback} onClick={onLeaveFeedback}>\r\n//       {feedback}\r\n//     </button>\r\n//   );\r\n// };\r\n\r\n// const FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n//   return options.map(option => (\r\n//     <FeedbackBtn feedback={option} onLeaveFeedback={onLeaveFeedback} />\r\n//   ));\r\n// };\r\n\r\n// FeedbackOptions.propTypes = {\r\n//   options: PropTypes.arrayOf(PropTypes.string),\r\n//   onLeaveFeedback: PropTypes.func.isRequired,\r\n// };\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  return options.map(option => (\r\n    <button type=\"button\" key={option} onClick={() => onLeaveFeedback(option)}>\r\n      {option}\r\n    </button>\r\n  ));\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\nexport default FeedbackOptions;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message }) => {\r\n  return <p>{message}</p>;\r\n};\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import React, { Component } from 'react';\nimport Statistics from './components/Statistics';\nimport Section from './components/Section';\nimport Feedback from './components/Feedback';\nimport Notification from './components/Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleFeedback = btn => {\n    this.setState({ [btn]: this.state[btn] + 1 });\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const total = this.countTotalFeedback();\n    const { good } = this.state;\n    return Math.round((good / total) * 100);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n    return (\n      <>\n        <Section title=\"Please leave feedback\">\n          <Feedback\n            options={['good', 'neutral', 'bad']}\n            onLeaveFeedback={this.handleFeedback}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {total > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}